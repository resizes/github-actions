name: "NuGet Security Report"
description: "Restore .NET projects and report vulnerable NuGet packages"
inputs:
  dotnet-version:
    description: "The .NET version to use"
    default: "8.0.x"

  project-path:
    description: 'Path to scan for .csproj files'
    required: false
    default: './'


runs:
  using: "composite"
  steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: "8.0.x"

    - name: Restore projects & scan
      shell: bash
      run: |
        echo "## ðŸ›¡ NuGet Warnings & Vulnerabilities" >> $GITHUB_STEP_SUMMARY
        issues=0

        # Find all csproj files inside this run block
        projects=$(find . -name '*.csproj')
        for proj in $projects; do
          echo "Restoring $proj..."
          restore_output=$(dotnet restore "$proj" --ignore-failed-sources 2>&1 || true)
          nus=$(echo "$restore_output" | grep -E '^.*NU[0-9]{4}:' || true)
          if [ -n "$nus" ]; then
            issues=$((issues + $(echo "$nus" | wc -l)))
            echo "### $proj" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "$nus" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi

          vuln_output=$(dotnet list "$proj" package --vulnerable 2>&1 || true)
          vuln_lines=$(echo "$vuln_output" | grep -E 'Top-level Package|Vulnerable packages' || true)
          if [ -n "$vuln_lines" ]; then
            issues=$((issues + $(echo "$vuln_lines" | wc -l)))
            echo "### Vulnerable packages in $proj" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "$vuln_output" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
        done

        if [ "$issues" -eq 0 ]; then
          echo "âœ… No NuGet warnings or vulnerable packages detected." >> $GITHUB_STEP_SUMMARY
        else
          echo "**$issues issues found across projects**" >> $GITHUB_STEP_SUMMARY
        fi
